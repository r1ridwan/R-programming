#libraray and require are same function
require(gapminder)
#libraray and require are same function
install.packages('"gapminder"')
require(gapminder)
library(gapminder)
head(gapminder)
#---------------------## DATA READING AND WRITING ##------------------------------------------
data("starwars")
install.packages("stringr")
library(stringr)
#---------------------## DATA READING AND WRITING ##------------------------------------------
data("starwars")
# DATA Export
data("gapminder")
force(gapminder)
View(gapminder)
#With Fixed directory
write.table(gapminder, file = "new_file.csv", sep = ',')
#With Fixed directory
write.table(gapminder, file = "new_file.csv", sep = ',' row.names = FALSE)
#With Fixed directory
write.table(gapminder, file = "new_file.csv", sep = ',', row.names = FALSE)
#With Fixed directory
write.table(gapminder, file = "new_file.csv", sep = ',', row.names = F)
#With Fixed directory
write.table(gapminder, file = "new_file.csv", row.names=F, sep = ',')
#With Fixed directory
write.table(gapminder, file = "new_file.csv", row.names=F, sep = ',')
write.xlsx(gapminder, file="new_file2.xlsx")
write.xlsx(gapminder, file="new_file2.xlsx")
write.xlsx(gapminder, file="new_file2.xlsx")
library(xlsx)
write.xlsx(gapminder, file="new_file2.xlsx")
write.xlsx(gapminder, file="new_file2.xlsx", row.names = F)
write.xlsx(gapminder, file="new_file2.xlsx", row.names = F)
write.xlsx(gapminder, file="new_file2.xlsx", row.names = F, sep = ',')
write.xlsx(gapminder, file="new_file2.xlsx", row.names = F)
write.csv(gapminder, file = "new_file3.csv", row.names = F)
write.xlsx(gapminder, file="new_file2.xlsx", row.names = F)
write_xlsx(gapminder, file="new_file2.xlsx", row.names = F)
write_xlsx(gapminder, file="new_file2.xlsx", row.names = F)
write.table(gapminder, file = "new_file.txt", row.names=F, sep = '\t')
write.table(gapminder, file = "new_file.txt", row.names=F, sep = "\t")
#With Fixed directory and row.names=F command to avoid extra row in dataset
write.table(gapminder, file = "new_file.csv", row.names=F, sep = ",")
write.table(gapminder, file = "new_file.txt", row.names=F, sep = "\t")
write.csv(gapminder, file = "new_file3.csv", row.names = F)
write.csv(gapminder, file = "new_file2.csv", row.names = F)
# Export as space seperated values
write.table(gapminder, file = "new_file_space.txt", row.names=F, sep = " ")
# Export as tab seperated values
write.table(gapminder, file = "new_file_tabs.txt", row.names=F, sep = "\t")
write_csv(gapminder, "new_file001.csv")
library(gapminder)
#Another data reading approaches
mydata<-read.table(file.choose(), header = TRUE,  )
# Data Import, or Data Input, or reading data
#This function is best for read and write
myfile<-read_csv(file = "new_file.csv")
# Data Import, or Data Input, or reading data
#This function is best for read and write
myfile<-read.csv(file = "new_file.csv")
View(myfile)
class(gapminder$country)
View(gapminder)
as strings. If you don't want your data to be treated as factor instead of string then use the following command.
data <- read.csv(new_file.csv, stringAsFactors = FALSE)
-------------------------------------------
#Reading and writing data for xlsx file
install.packages("xlsx")
library(xlsx)
library(gapminder)
write.table(gapminder, file = "xlsxfile.xlsx")
newfile=read.table(file="xlsxfile.xlsx",)
data <- read.csv(new_file.csv, stringAsFactors = FALSE)
data <- read.csv(new_file.csv, stringAsFactors = FALSE)
data <- read.csv("new_file.csv", stringAsFactors = FALSE)
data <- read.csv("new_file.csv", stringsAsFactors = FALSE)
View(data)
View(newfile)
class(new_file$country)
class(newfile$country)
# You might have to convert some columns to factors
data$country <- factor(data$country)
class(newfile$country)
# You might have to convert some columns to factors
data$country <- factor(data$country)
class(newfile$country)
data <- read.csv("new_file.csv", stringsAsFactors = TRUE)
class(newfile$country)
class(data$country)
data <- read.csv("new_file.csv", stringsAsFactors = FALSE)
class(data$country)
newdata <- read.delim(file.choose(), header = T, sep = ",")
View(newdata)
newdata <- read.delim(file.choose(), header = T)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
newdata <- read.delim(file.choose(), header = T)
View(newdata)
View(newdata)
View(newdata)
newdata <- read.delim(file.choose(), header = T)
newdata <- read.delim(file.choose(), header = T)
newdata <- read.delim(file.choose(), header = T)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
View(newdata)
newdata <- read.delim(file.choose(), header = T)
newda <- read.delim(file.choose(), header = T)
newda <- read.delim(file.choose(), header = T)
data2 <- read.table(file.choose(), header = T, sep="\t")
